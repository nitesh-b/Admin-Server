/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hills;

import com.google.api.core.ApiFuture;
import com.google.auth.ServiceAccountSigner;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.Query;
import com.google.cloud.firestore.QueryDocumentSnapshot;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.cloud.firestore.WriteResult;
import com.google.cloud.storage.Blob;
import com.google.cloud.storage.BlobId;
import com.google.cloud.storage.BlobInfo;
import com.google.cloud.storage.Bucket;
import com.google.cloud.storage.BucketInfo;
import com.google.cloud.storage.HttpMethod;
import com.google.cloud.storage.Storage;
import com.google.cloud.storage.Storage.SignUrlOption;
import com.google.cloud.storage.StorageOptions;
import com.google.firebase.cloud.StorageClient;
import com.google.firebase.database.DatabaseReference;
import com.hills.data.CarauselImagesData;
import com.hills.data.FirebaseInitializaton;
import com.hills.data.ProductDetails;
import custom_objects.LatestUpdateData;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author nitesh.banskota
 */
public class FirstFrame extends javax.swing.JFrame {

    private String category = "access_control";
    private final static String projectId = "hillsapp-5b438";
    private final static String bucketName = "hillsapp-5b438.appspot.com";
    private File latestFile;
    public FirstFrame() throws Exception {
        initComponents();

        /*---------------Load Featured Product Open------------------*/
        featuredProductInitialization(category);
        enableTextFields(false);
        /*---------------Load Featured Product Close------------------*/

 /*---------------Load Latest Updates Open------------------*/
        latestUpdatesInitialization();
        /*---------------Load Latest Update Close------------------*/

 /*---------------Load Banner Images Open------------------*/
        BannerImageInitialization imageInitialization = new BannerImageInitialization();
        imageInitialization.updateTable(carauselImagesTableView);
        bannerUploadButton.setVisible(false);
//carauselImagesTableView.getColumn("Image").setCellRenderer(new MyTableCellRenderer());
/*---------------Load Banner Images Close------------------*/
//DoubleClick on tableView Row to et content in resp. fields
        tableRowClickEvent();
    }

    /*
    class MyTableCellRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {
            return (Component) value;

        }
    }
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        featureProductsPanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        tableView = new javax.swing.JTable();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        EditingPanel = new javax.swing.JPanel();
        categoryComboBox = new javax.swing.JComboBox<>();
        productNameTextField = new javax.swing.JTextField();
        skuTextField = new javax.swing.JTextField();
        linkTextField = new javax.swing.JTextField();
        supplierTextField = new javax.swing.JTextField();
        labelPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addNewFeatureProductButton = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        imageLinkTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        bannerLinkTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        clearBanner = new javax.swing.JButton();
        deleteBanner = new javax.swing.JButton();
        addNewBanner = new javax.swing.JButton();
        bannerUploadButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        carauselImagesTableView = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        bannerImageIconLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        latestUpdatePanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        latestUpdateImage = new javax.swing.JLabel();
        latestUpdateTitleTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        latestUpdateDescriptionTextArea = new javax.swing.JTextArea();
        latestUpdateLinkTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        latestUpdateSaveButton = new javax.swing.JButton();
        latestUpdateDeleteButton = new javax.swing.JButton();
        latestUpdateClearAllButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        latestUpdateTableView = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(764, 600));
        setMinimumSize(new java.awt.Dimension(764, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(764, 600));

        tableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "SKU", "Product Name", "Supplier", "Description", "Link", "Image Link"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPane.setViewportView(tableView);

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Description")));
        descriptionScrollPane.setViewportView(descriptionTextArea);

        EditingPanel.setMaximumSize(new java.awt.Dimension(0, 0));
        EditingPanel.setPreferredSize(new java.awt.Dimension(0, 0));

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "access_control", "cctv", "itc" }));
        categoryComboBox.setMaximumSize(new java.awt.Dimension(150, 27));
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        productNameTextField.setEditable(false);
        productNameTextField.setMaximumSize(new java.awt.Dimension(11, 26));

        skuTextField.setEditable(false);
        skuTextField.setMaximumSize(new java.awt.Dimension(11, 26));
        skuTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skuTextFieldActionPerformed(evt);
            }
        });

        linkTextField.setEditable(false);
        linkTextField.setMaximumSize(new java.awt.Dimension(11, 26));
        linkTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkTextFieldActionPerformed(evt);
            }
        });

        supplierTextField.setEditable(false);
        supplierTextField.setMaximumSize(new java.awt.Dimension(11, 26));
        supplierTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditingPanelLayout = new javax.swing.GroupLayout(EditingPanel);
        EditingPanel.setLayout(EditingPanelLayout);
        EditingPanelLayout.setHorizontalGroup(
            EditingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(categoryComboBox, 0, 277, Short.MAX_VALUE)
            .addGroup(EditingPanelLayout.createSequentialGroup()
                .addGroup(EditingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(skuTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(supplierTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(linkTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        EditingPanelLayout.setVerticalGroup(
            EditingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(skuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supplierTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        labelPanel.setMaximumSize(new java.awt.Dimension(0, 0));

        jLabel4.setText("Link to website");

        jLabel1.setText("SKU");

        jLabel6.setText("Category");

        jLabel2.setText("Product Name");

        jLabel7.setText("Supplier");

        javax.swing.GroupLayout labelPanelLayout = new javax.swing.GroupLayout(labelPanel);
        labelPanel.setLayout(labelPanelLayout);
        labelPanelLayout.setHorizontalGroup(
            labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        labelPanelLayout.setVerticalGroup(
            labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(saveButton)
                    .addComponent(deleteButton))
                .addContainerGap())
        );

        addNewFeatureProductButton.setText("Add new featured product");
        addNewFeatureProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewFeatureProductButtonActionPerformed(evt);
            }
        });

        imageLabel.setBackground(new java.awt.Color(204, 0, 255));
        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setText("Image Here");
        imageLabel.setAlignmentX(0.5F);
        imageLabel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 255, 255), null, java.awt.Color.gray), null));
        imageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imageLabel.setMaximumSize(new java.awt.Dimension(200, 200));
        imageLabel.setMinimumSize(new java.awt.Dimension(200, 200));
        imageLabel.setPreferredSize(new java.awt.Dimension(200, 200));
        imageLabel.setSize(new java.awt.Dimension(200, 200));

        imageLinkTextField.setEditable(false);
        imageLinkTextField.setMaximumSize(new java.awt.Dimension(11, 26));

        javax.swing.GroupLayout featureProductsPanelLayout = new javax.swing.GroupLayout(featureProductsPanel);
        featureProductsPanel.setLayout(featureProductsPanelLayout);
        featureProductsPanelLayout.setHorizontalGroup(
            featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featureProductsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(featureProductsPanelLayout.createSequentialGroup()
                        .addGroup(featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(featureProductsPanelLayout.createSequentialGroup()
                                .addComponent(labelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(EditingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLinkTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNewFeatureProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
            .addGroup(featureProductsPanelLayout.createSequentialGroup()
                .addComponent(tableScrollPane)
                .addContainerGap())
        );
        featureProductsPanelLayout.setVerticalGroup(
            featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featureProductsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(featureProductsPanelLayout.createSequentialGroup()
                        .addGroup(featureProductsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(featureProductsPanelLayout.createSequentialGroup()
                        .addComponent(addNewFeatureProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imageLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Featured Products", featureProductsPanel);

        clearBanner.setText("Clear");

        deleteBanner.setText("Delete");
        deleteBanner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBannerActionPerformed(evt);
            }
        });

        addNewBanner.setText("Add New");
        addNewBanner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewBannerActionPerformed(evt);
            }
        });

        bannerUploadButton.setText("Upload");
        bannerUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bannerUploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addNewBanner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBanner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearBanner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bannerUploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addNewBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bannerUploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearBanner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        carauselImagesTableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Image", "Link"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(carauselImagesTableView);
        carauselImagesTableView.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (carauselImagesTableView.getColumnModel().getColumnCount() > 0) {
            carauselImagesTableView.getColumnModel().getColumn(0).setResizable(false);
            carauselImagesTableView.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannerImageIconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannerImageIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel3.setText("Image Link:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bannerLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bannerLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Banner Images", jPanel2);

        jPanel6.setBackground(new java.awt.Color(238, 255, 255));

        jPanel5.setBackground(new java.awt.Color(238, 221, 195));

        latestUpdateImage.setBackground(new java.awt.Color(0, 0, 0));
        latestUpdateImage.setText("Click to Add Image");
        latestUpdateImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        latestUpdateImage.setMaximumSize(new java.awt.Dimension(225, 125));
        latestUpdateImage.setMinimumSize(new java.awt.Dimension(225, 125));
        latestUpdateImage.setPreferredSize(new java.awt.Dimension(225, 125));
        latestUpdateImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                latestUpdateImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(latestUpdateImage, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(latestUpdateImage, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        latestUpdateTitleTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Title"));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));

        latestUpdateDescriptionTextArea.setColumns(20);
        latestUpdateDescriptionTextArea.setLineWrap(true);
        latestUpdateDescriptionTextArea.setRows(5);
        latestUpdateDescriptionTextArea.setMaximumSize(new java.awt.Dimension(1, 16));
        jScrollPane1.setViewportView(latestUpdateDescriptionTextArea);

        latestUpdateLinkTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Link"));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(latestUpdateTitleTextField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addComponent(latestUpdateLinkTextField))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(latestUpdateTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(latestUpdateLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        latestUpdateSaveButton.setText("Save");
        latestUpdateSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latestUpdateSaveButtonActionPerformed(evt);
            }
        });

        latestUpdateDeleteButton.setText("Delete");

        latestUpdateClearAllButton.setText("Clear All");
        latestUpdateClearAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latestUpdateClearAllButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(latestUpdateClearAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(latestUpdateSaveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(latestUpdateDeleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshButton)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(latestUpdateClearAllButton)
                    .addComponent(latestUpdateSaveButton)
                    .addComponent(latestUpdateDeleteButton)
                    .addComponent(refreshButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        latestUpdateTableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Title", "Description", "Link", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(latestUpdateTableView);

        javax.swing.GroupLayout latestUpdatePanelLayout = new javax.swing.GroupLayout(latestUpdatePanel);
        latestUpdatePanel.setLayout(latestUpdatePanelLayout);
        latestUpdatePanelLayout.setHorizontalGroup(
            latestUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(latestUpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(latestUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        latestUpdatePanelLayout.setVerticalGroup(
            latestUpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(latestUpdatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Latest Updates", latestUpdatePanel);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Notification", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewFeatureProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewFeatureProductButtonActionPerformed
        dispose();
        System.out.println("I am here");
        AddFeatureProducts addProduct;
        try {
            addProduct = new AddFeatureProducts();
            addProduct.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_addNewFeatureProductButtonActionPerformed

    private void skuTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skuTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skuTextFieldActionPerformed

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        enableTextFields(false);
        category = categoryComboBox.getSelectedItem().toString();
        ((DefaultTableModel) tableView.getModel()).setRowCount(0);
        try {
            featuredProductInitialization(category);
        } catch (Exception ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private void supplierTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierTextFieldActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        enableTextFields(true);

    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        ApiFuture<WriteResult> result = FirebaseInitializaton.firestore
                .collection("Products")
                .document("featured_products")
                .collection(category)
                .document(skuTextField.getText())
                .delete();

        cleaAllFields();
        try {
            featuredProductInitialization(category);
        } catch (Exception ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed
    
    private void latestUpdateImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latestUpdateImageMouseClicked
        latestUpdateImage.setText("");
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileNameExtensionFilter("Chose Image", "png", "jpg"));
        chooser.showOpenDialog(null);
        File choserFilefile = chooser.getSelectedFile();
        latestFile = choserFilefile;
        BufferedImage image;
        try {
            image = ImageIO.read(choserFilefile);
            Image resized = getScaledImage(image, 225, 125);
            ImageIcon icon = new ImageIcon(resized);
            latestUpdateImage.setSize(125, 225);
            latestUpdateImage.setIcon(icon);

        } catch (IOException ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_latestUpdateImageMouseClicked

    private void latestUpdateSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latestUpdateSaveButtonActionPerformed
        try {
            BlobId blobId = BlobId.of(bucketName, "latest_update_Images/" + latestFile.getName());
            BlobInfo blobInfo = BlobInfo.newBuilder(blobId).setContentType("image/png").build();
            Blob blob = FirebaseInitializaton.storage.create(blobInfo, Files.readAllBytes(Paths.get(latestFile.getPath())));

            String imageLink = blob.getMediaLink();

            if (allLatestUpdateFieldnotEmpty()) {
                uploadLatestUpdatesData(imageLink);
                System.out.println("MY access Token is: " + imageLink);
                clearLatestUpdateFields();
                
                refreshAll();
            } else {

                displayAlert("Please Fill all the boxes");
            }
        } catch (IOException | NullPointerException ex) {
            displayAlert(ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_latestUpdateSaveButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        ProductDetails details = new ProductDetails(
                imageLinkTextField.getText(),
                linkTextField.getText(),
                supplierTextField.getText(),
                descriptionTextArea.getText(),
                skuTextField.getText()
        );

        DocumentReference dRef = FirebaseInitializaton.firestore.collection("Products")
                .document("featured_products")
                .collection(category)
                .document(skuTextField.getText());
        ApiFuture<WriteResult> result = dRef.set(details);
        cleaAllFields();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void linkTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linkTextFieldActionPerformed

    private void latestUpdateClearAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latestUpdateClearAllButtonActionPerformed
        clearLatestUpdateFields();       // TODO add your handling code here:
    }//GEN-LAST:event_latestUpdateClearAllButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try {
            refreshAll();
        } catch (Exception ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
            displayAlert("Cannot Refresh at the moment");
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void bannerUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bannerUploadButtonActionPerformed
   
        if(latestFile.exists() || !bannerLinkTextField.getText().isBlank()){
            try {
                BlobId blobId = BlobId.of(bucketName, "Banner_Images/" + latestFile.getName());
                BlobInfo blobInfo = BlobInfo.newBuilder(blobId).setContentType("image/png").build();
                Blob blob = FirebaseInitializaton.storage.create(blobInfo, Files.readAllBytes(Paths.get(latestFile.getPath())));
                
                CarauselImagesData imagesData = new CarauselImagesData();
                imagesData.setImage(blob.getMediaLink());
                imagesData.setLink(bannerLinkTextField.getText());
                
                Date myDate = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("E dd-MM-YYYY zzz");
                String date = sdf.format(myDate);
                
                DocumentReference dRef = FirebaseInitializaton.firestore.collection("CarouselImages")
                .document(date);

                ApiFuture<WriteResult> result = dRef.set(imagesData);
                if(result.isDone()){
                    displayAlert("Banner Successfully Added!");
                }
            
                
            } catch (IOException ex) {
                displayAlert("IOException: " + ex.getLocalizedMessage());
            }
            
            
        }
        
        addNewBanner.setVisible(true);
        bannerUploadButton.setVisible(false); 
        bannerImageIconLabel.setIcon(null);
        bannerLinkTextField.setText("");
    }//GEN-LAST:event_bannerUploadButtonActionPerformed

    private void addNewBannerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewBannerActionPerformed
       addNewBanner.setVisible(false);
       bannerUploadButton.setVisible(true);
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileNameExtensionFilter("Select Image", "png", "jpg"));
        chooser.showOpenDialog(null);
        File imgFile = chooser.getSelectedFile();
        latestFile = imgFile;
        
        
        try {
            BufferedImage image = ImageIO.read(imgFile);
            Image resizedImage = getScaledImage(image, bannerImageIconLabel.getWidth(), bannerImageIconLabel.getHeight());
            ImageIcon icon = new ImageIcon(resizedImage);
            bannerImageIconLabel.setIcon(icon);
            bannerLinkTextField.setText("");
            bannerLinkTextField.setToolTipText("Please add Link URL here...");
           
        } catch (IOException ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_addNewBannerActionPerformed

    private void deleteBannerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBannerActionPerformed
        try {
            Query query =    FirebaseInitializaton.firestore.collection("CarouselImages").whereEqualTo("link", bannerLinkTextField.getText());
            
            ApiFuture<QuerySnapshot> result = query.get();
            QuerySnapshot snapshot = result.get();
            List<QueryDocumentSnapshot> docList = snapshot.getDocuments();
            docList.forEach((document) -> {
                String number = document.getId();
                FirebaseInitializaton.firestore.collection("CarouselImages").document(number).delete();
            });
        } catch (InterruptedException ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBannerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EditingPanel;
    private javax.swing.JButton addNewBanner;
    private javax.swing.JButton addNewFeatureProductButton;
    private javax.swing.JLabel bannerImageIconLabel;
    private javax.swing.JTextField bannerLinkTextField;
    private javax.swing.JButton bannerUploadButton;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JTable carauselImagesTableView;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton clearBanner;
    private javax.swing.JButton deleteBanner;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel featureProductsPanel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextField imageLinkTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JButton latestUpdateClearAllButton;
    private javax.swing.JButton latestUpdateDeleteButton;
    private javax.swing.JTextArea latestUpdateDescriptionTextArea;
    private javax.swing.JLabel latestUpdateImage;
    private javax.swing.JTextField latestUpdateLinkTextField;
    private javax.swing.JPanel latestUpdatePanel;
    private javax.swing.JButton latestUpdateSaveButton;
    private javax.swing.JTable latestUpdateTableView;
    private javax.swing.JTextField latestUpdateTitleTextField;
    private javax.swing.JTextField linkTextField;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField skuTextField;
    private javax.swing.JTextField supplierTextField;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JTable tableView;
    // End of variables declaration//GEN-END:variables

    private void featuredProductInitialization(String cat) throws Exception {

        /*---------------Load Featured Product Open------------------*/
        ApiFuture<QuerySnapshot> result = FirebaseInitializaton.firestore
                .collection("Products")
                .document("featured_products")
                .collection(cat)
                .get();
        QuerySnapshot snapshot = result.get();
        List<ProductDetails> pList = new ArrayList<>();
        pList.clear();
        List<QueryDocumentSnapshot> docList = snapshot.getDocuments();
        docList.forEach((document) -> {
            pList.add(document.toObject(ProductDetails.class));
        });
        addDatatoTable(pList);
        /*---------------Load Featured Product Close------------------*/

    }

    private void addDatatoTable(List<ProductDetails> pList) {

        DefaultTableModel model = (DefaultTableModel) tableView.getModel();

        Object[] rowData = new Object[6];

        for (int i = 0; i < pList.size(); i++) {
            rowData[0] = pList.get(i).getProductNumber();
            rowData[1] = pList.get(i).getProductDescription();
            rowData[2] = pList.get(i).getProductSupplier();
            rowData[3] = pList.get(i).getProductDescription();
            rowData[4] = pList.get(i).getProductLink();
            rowData[5] = pList.get(i).getProductImage();
            model.addRow(rowData);

        }
    }

    private void tableRowClickEvent() {

        /*-------------For Featured Products Table Row Click Open-------------*/
        tableView.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    System.out.println("Row : " + row);
                    skuTextField.setText(table.getValueAt(row, 0).toString());
                    productNameTextField.setText(table.getValueAt(row, 1).toString());
                    supplierTextField.setText(table.getValueAt(row, 2).toString());
                    descriptionTextArea.setText(table.getValueAt(row, 3).toString());
                    linkTextField.setText(table.getValueAt(row, 4).toString());
                    imageLinkTextField.setText(table.getValueAt(row, 5).toString());

                    try {
                        BufferedImage image = ImageIO.read(new URL(table.getValueAt(row, 5).toString()));
                        Image resizedImage = getScaledImage(image, 200, 200);
                        ImageIcon icon = new ImageIcon(resizedImage);
                        imageLabel.setSize(316, 218);
                        imageLabel.setIcon(icon);

                    } catch (MalformedURLException ex) {
                        JOptionPane.showMessageDialog(null, "Error retriving URL");

                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Image not Found");
                    }

                }
            }

        });
        /*-------------For Featured Products Table Row Click Close-------------*/

 /*-------------For Latest Updates Table Row Click Open-------------*/
        latestUpdateTableView.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                    latestUpdateTitleTextField.setText(table.getValueAt(row, 1).toString());
                    latestUpdateDescriptionTextArea.setText(table.getValueAt(row, 2).toString());
                    latestUpdateLinkTextField.setText(table.getValueAt(row, 3).toString());

                    try {

                        BufferedImage image = ImageIO.read(new URL(table.getValueAt(row, 4).toString()));
                        Image resizedImage = getScaledImage(image, 255, 125);
                        ImageIcon icon = new ImageIcon(resizedImage);
                        latestUpdateImage.setSize(225, 125);
                        latestUpdateImage.setIcon(icon);
                    } catch (Exception ex) {
                        Logger.getLogger(FirstFrame.class.getName()).log(Level.SEVERE, null, ex);
                        displayAlert(ex.getLocalizedMessage());
                    }

                }
            }
        });
        /*-------------For Latest Updates Table Row Click Closed-------------*/

 /*-------------For  Carousel Banner Click Open-------------*/
        carauselImagesTableView.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent event) {
                super.mousePressed(event);
                JTable table = (JTable) event.getSource();
                Point point = event.getPoint();
                int row = table.rowAtPoint(point);
                if (event.getClickCount() == 1 && table.getSelectedRow() != -1) {
                    addNewBanner.setVisible(true);
                    bannerUploadButton.setVisible(false);
                    try {
                        BufferedImage image = ImageIO.read(new URL(table.getValueAt(row, 0).toString()));
                        ImageIcon icon = new ImageIcon(getScaledImage(image, 596, 350));
                        bannerImageIconLabel.setIcon(icon);
                    } catch (IOException ex) {
                        displayAlert(ex.getLocalizedMessage());
                    }
                    bannerLinkTextField.setText(table.getValueAt(row, 1).toString());
                }

            }
        });
    }

    public Image getScaledImage(BufferedImage image, int w, int h) {
        BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = resizedImg.createGraphics();

        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(image, 0, 0, w, h, null);
        g2.dispose();

        return resizedImg;
    }

    public void enableTextFields(Boolean state) {
        skuTextField.setEditable(state);
        productNameTextField.setEditable(state);
        supplierTextField.setEditable(state);
        linkTextField.setEditable(state);
        descriptionTextArea.setEditable(state);
        imageLinkTextField.setEditable(state);
        saveButton.setEnabled(state);
        deleteButton.setEnabled(state);
    }

    public void cleaAllFields() {
        skuTextField.setText("");
        productNameTextField.setText("");
        supplierTextField.setText("");
        linkTextField.setText("");
        descriptionTextArea.setText("");
        imageLinkTextField.setText("");
        imageLabel.setText("");
        tableView.update(null);
    }

    private void clearLatestUpdateFields() {

        latestUpdateImage.setIcon(null); //TODO
        latestUpdateImage.setText("Click to add image!");
        latestUpdateImage.setText("");
        latestUpdateTitleTextField.setText("");
        latestUpdateDescriptionTextArea.setText("");
        latestUpdateLinkTextField.setText("");
    }

    private void latestUpdatesInitialization() throws Exception {
        ApiFuture<QuerySnapshot> result = FirebaseInitializaton.firestore
                .collection("Latest Updates")
                .get();
        QuerySnapshot snapshot = result.get();
        List<LatestUpdateData> pList = new ArrayList<>();
        List<QueryDocumentSnapshot> docList = snapshot.getDocuments();
        docList.forEach((document) -> {
            pList.add(document.toObject(LatestUpdateData.class));
        });
        addDatatoLatestUpdateTable(pList);

    }

    private void addDatatoLatestUpdateTable(List<LatestUpdateData> pList) {
        DefaultTableModel model = (DefaultTableModel) latestUpdateTableView.getModel();

        Object[] rowData = new Object[5];

        for (int i = 0; i < pList.size(); i++) {
            rowData[0] = pList.get(i).getDate();
            rowData[1] = pList.get(i).getTitle();
            rowData[2] = pList.get(i).getDescription();
            rowData[3] = pList.get(i).getLink();
            rowData[4] = pList.get(i).getImage();
            model.addRow(rowData);
        }
    }

    private void uploadLatestUpdatesData(String imageLink) {
        LatestUpdateData latestUpdateData = new LatestUpdateData();
        latestUpdateData.setImage(imageLink);
        latestUpdateData.setTitle(latestUpdateTitleTextField.getText());
        latestUpdateData.setDescription(latestUpdateDescriptionTextArea.getText());
        latestUpdateData.setLink(latestUpdateLinkTextField.getText());

        Date myDate = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("E dd/MM/YYYY zzz");
        String date = sdf.format(myDate);
        latestUpdateData.setDate(date);

        DocumentReference dRef = FirebaseInitializaton.firestore.collection("Latest Updates")
                .document();

        ApiFuture<WriteResult> result = dRef.set(latestUpdateData);
    }

    private void displayAlert(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    private boolean allLatestUpdateFieldnotEmpty() {
        return !latestUpdateTitleTextField.getText().isEmpty() || !latestUpdateDescriptionTextArea.getText().isEmpty() || !latestUpdateLinkTextField.getText().isEmpty();
    }

    private void refreshAll() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tableView.getModel();
        model.setRowCount(0);
        DefaultTableModel model2 = (DefaultTableModel) latestUpdateTableView.getModel();
        model2.setRowCount(0);
        latestUpdatesInitialization();
        featuredProductInitialization(category);
    }

  
}
